/*     */ import com.google.gson.JsonObject;
/*     */ import java.util.Map;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class a
/*     */   implements avm<avp>
/*     */ {
/*     */   public avp b(pc ☃, JsonObject jsonObject) {
/* 252 */     String str = xj.a(jsonObject, "group", "");
/*     */     
/* 254 */     Map<String, avh> map = avp.b(xj.t(jsonObject, "key"));
/* 255 */     String[] arrayOfString = avp.a(avp.a(xj.u(jsonObject, "pattern")));
/*     */     
/* 257 */     int i = arrayOfString[0].length();
/* 258 */     int j = arrayOfString.length;
/*     */     
/* 260 */     ez<avh> ez = avp.a(arrayOfString, map, i, j);
/*     */     
/* 262 */     ate ate = avp.a(xj.t(jsonObject, "result"));
/*     */     
/* 264 */     return new avp(☃, str, i, j, ez, ate);
/*     */   }
/*     */ 
/*     */   
/*     */   public String a() {
/* 269 */     return "crafting_shaped";
/*     */   }
/*     */ 
/*     */   
/*     */   public avp b(pc ☃, hy hy1) {
/* 274 */     int i = hy1.g();
/* 275 */     int j = hy1.g();
/* 276 */     String str = hy1.e(32767);
/* 277 */     ez<avh> ez = ez.a(i * j, avh.a);
/* 278 */     for (int k = 0; k < ez.size(); k++) {
/* 279 */       ez.set(k, avh.b(hy1));
/*     */     }
/* 281 */     ate ate = hy1.k();
/* 282 */     return new avp(☃, str, i, j, ez, ate);
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(hy ☃, avp avp1) {
/* 287 */     ☃.d(avp.a(avp1));
/* 288 */     ☃.d(avp.b(avp1));
/* 289 */     ☃.a(avp.c(avp1));
/* 290 */     for (avh avh : avp.d(avp1)) {
/* 291 */       avh.a(☃);
/*     */     }
/* 293 */     ☃.a(avp.e(avp1));
/*     */   }
/*     */ }


/* Location:              F:\dw\server.jar!\avp$a.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */