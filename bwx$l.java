/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class l
/*     */   extends bwx.p
/*     */ {
/*     */   private boolean a;
/*     */   
/*     */   public l() {}
/*     */   
/*     */   public l(int ☃, Random random, int i, int j) {
/* 463 */     super(☃);
/*     */     
/* 465 */     this.a = true;
/* 466 */     a(eq.c.a.a(random));
/* 467 */     this.d = bwx.p.a.a;
/*     */     
/* 469 */     if (f().k() == eq.a.c) {
/* 470 */       this.n = new bwf(i, 64, j, i + 5 - 1, 74, j + 5 - 1);
/*     */     } else {
/* 472 */       this.n = new bwf(i, 64, j, i + 5 - 1, 74, j + 5 - 1);
/*     */     } 
/*     */   }
/*     */   
/*     */   public l(int ☃, Random random, bwf bwf1, eq eq1) {
/* 477 */     super(☃);
/*     */     
/* 479 */     this.a = false;
/* 480 */     a(eq1);
/* 481 */     this.d = a(random);
/* 482 */     this.n = bwf1;
/*     */   }
/*     */ 
/*     */   
/*     */   protected void a(gy ☃) {
/* 487 */     super.a(☃);
/* 488 */     ☃.a("Source", this.a);
/*     */   }
/*     */ 
/*     */   
/*     */   protected void a(gy ☃, bxm bxm1) {
/* 493 */     super.a(☃, bxm1);
/* 494 */     this.a = ☃.q("Source");
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(bxb ☃, List<bxb> list, Random random) {
/* 499 */     if (this.a)
/*     */     {
/* 501 */       bwx.a(bwx.c.class);
/*     */     }
/* 503 */     a((bwx.m)☃, list, random, 1, 1);
/*     */   }
/*     */   
/*     */   public static l a(List<bxb> ☃, Random random, int i, int j, int k, eq eq1, int m) {
/* 507 */     bwf bwf = bwf.a(i, j, k, -1, -7, 0, 5, 11, 5, eq1);
/*     */     
/* 509 */     if (!a(bwf) || bxb.a(☃, bwf) != null) {
/* 510 */       return null;
/*     */     }
/*     */     
/* 513 */     return new l(m, random, bwf, eq1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(axz ☃, Random random, bwf bwf1, axm axm1) {
/* 519 */     a(☃, bwf1, 0, 0, 0, 4, 10, 4, true, random, bwx.c());
/*     */     
/* 521 */     a(☃, random, bwf1, this.d, 1, 7, 0);
/*     */     
/* 523 */     a(☃, random, bwf1, bwx.p.a.a, 1, 1, 4);
/*     */ 
/*     */     
/* 526 */     a(☃, bct.dy.p(), 2, 6, 1, bwf1);
/* 527 */     a(☃, bct.dy.p(), 1, 5, 1, bwf1);
/* 528 */     a(☃, bct.bJ.p(), 1, 6, 1, bwf1);
/* 529 */     a(☃, bct.dy.p(), 1, 5, 2, bwf1);
/* 530 */     a(☃, bct.dy.p(), 1, 4, 3, bwf1);
/* 531 */     a(☃, bct.bJ.p(), 1, 5, 3, bwf1);
/* 532 */     a(☃, bct.dy.p(), 2, 4, 3, bwf1);
/* 533 */     a(☃, bct.dy.p(), 3, 3, 3, bwf1);
/* 534 */     a(☃, bct.bJ.p(), 3, 4, 3, bwf1);
/* 535 */     a(☃, bct.dy.p(), 3, 3, 2, bwf1);
/* 536 */     a(☃, bct.dy.p(), 3, 2, 1, bwf1);
/* 537 */     a(☃, bct.bJ.p(), 3, 3, 1, bwf1);
/* 538 */     a(☃, bct.dy.p(), 2, 2, 1, bwf1);
/* 539 */     a(☃, bct.dy.p(), 1, 1, 1, bwf1);
/* 540 */     a(☃, bct.bJ.p(), 1, 2, 1, bwf1);
/* 541 */     a(☃, bct.dy.p(), 1, 1, 2, bwf1);
/* 542 */     a(☃, bct.bJ.p(), 1, 1, 3, bwf1);
/*     */     
/* 544 */     return true;
/*     */   }
/*     */ }


/* Location:              F:\dw\server.jar!\bwx$l.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */