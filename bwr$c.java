/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class c
/*     */   extends bwr.m
/*     */ {
/*     */   public c() {}
/*     */   
/*     */   public c(int ☃, Random random, bwf bwf1, eq eq1) {
/* 340 */     super(☃);
/*     */     
/* 342 */     a(eq1);
/* 343 */     this.n = bwf1;
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(bxb ☃, List<bxb> list, Random random) {
/* 348 */     a((bwr.q)☃, list, random, 1, 3, false);
/*     */   }
/*     */   
/*     */   public static c a(List<bxb> ☃, Random random, int i, int j, int k, eq eq1, int n) {
/* 352 */     bwf bwf = bwf.a(i, j, k, -1, -3, 0, 5, 10, 19, eq1);
/*     */     
/* 354 */     if (!a(bwf) || bxb.a(☃, bwf) != null) {
/* 355 */       return null;
/*     */     }
/*     */     
/* 358 */     return new c(n, random, bwf, eq1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(axz ☃, Random random, bwf bwf1, axm axm1) {
/* 364 */     a(☃, bwf1, 0, 3, 0, 4, 4, 18, bct.dX.p(), bct.dX.p(), false);
/*     */     
/* 366 */     a(☃, bwf1, 1, 5, 0, 3, 7, 18, bct.a.p(), bct.a.p(), false);
/*     */ 
/*     */     
/* 369 */     a(☃, bwf1, 0, 5, 0, 0, 5, 18, bct.dX.p(), bct.dX.p(), false);
/* 370 */     a(☃, bwf1, 4, 5, 0, 4, 5, 18, bct.dX.p(), bct.dX.p(), false);
/*     */ 
/*     */     
/* 373 */     a(☃, bwf1, 0, 2, 0, 4, 2, 5, bct.dX.p(), bct.dX.p(), false);
/* 374 */     a(☃, bwf1, 0, 2, 13, 4, 2, 18, bct.dX.p(), bct.dX.p(), false);
/* 375 */     a(☃, bwf1, 0, 0, 0, 4, 1, 3, bct.dX.p(), bct.dX.p(), false);
/* 376 */     a(☃, bwf1, 0, 0, 15, 4, 1, 18, bct.dX.p(), bct.dX.p(), false);
/*     */     
/* 378 */     for (int i = 0; i <= 4; i++) {
/* 379 */       for (int j = 0; j <= 2; j++) {
/* 380 */         b(☃, bct.dX.p(), i, -1, j, bwf1);
/* 381 */         b(☃, bct.dX.p(), i, -1, 18 - j, bwf1);
/*     */       } 
/*     */     } 
/*     */     
/* 385 */     blc blc1 = bct.dY.p().a(ber.a, Boolean.valueOf(true)).a(ber.c, Boolean.valueOf(true));
/* 386 */     blc blc2 = blc1.a(ber.b, Boolean.valueOf(true));
/* 387 */     blc blc3 = blc1.a(ber.o, Boolean.valueOf(true));
/* 388 */     a(☃, bwf1, 0, 1, 1, 0, 4, 1, blc2, blc2, false);
/* 389 */     a(☃, bwf1, 0, 3, 4, 0, 4, 4, blc2, blc2, false);
/* 390 */     a(☃, bwf1, 0, 3, 14, 0, 4, 14, blc2, blc2, false);
/* 391 */     a(☃, bwf1, 0, 1, 17, 0, 4, 17, blc2, blc2, false);
/* 392 */     a(☃, bwf1, 4, 1, 1, 4, 4, 1, blc3, blc3, false);
/* 393 */     a(☃, bwf1, 4, 3, 4, 4, 4, 4, blc3, blc3, false);
/* 394 */     a(☃, bwf1, 4, 3, 14, 4, 4, 14, blc3, blc3, false);
/* 395 */     a(☃, bwf1, 4, 1, 17, 4, 4, 17, blc3, blc3, false);
/*     */     
/* 397 */     return true;
/*     */   }
/*     */ }


/* Location:              F:\dw\server.jar!\bwr$c.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */