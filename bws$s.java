/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class s
/*      */   extends bws.r
/*      */ {
/*      */   private int p;
/*      */   
/*      */   public s() {}
/*      */   
/*      */   public s(eq ☃, bws.v v1, Random random) {
/*  904 */     super(1, ☃, v1, 1, 1, 1);
/*  905 */     this.p = random.nextInt(3);
/*      */   }
/*      */ 
/*      */   
/*      */   public boolean a(axz ☃, Random random, bwf bwf1, axm axm1) {
/*  910 */     if (bws.v.a(this.l) / 25 > 0) {
/*  911 */       a(☃, bwf1, 0, 0, bws.v.d(this.l)[eq.a.a()]);
/*      */     }
/*  913 */     if (bws.v.c(this.l)[eq.b.a()] == null) {
/*  914 */       a(☃, bwf1, 1, 4, 1, 6, 4, 6, a);
/*      */     }
/*      */     
/*  917 */     boolean bool = (this.p != 0 && random.nextBoolean() && !bws.v.d(this.l)[eq.a.a()] && !bws.v.d(this.l)[eq.b.a()] && this.l.c() > 1);
/*      */     
/*  919 */     if (this.p == 0) {
/*      */       
/*  921 */       a(☃, bwf1, 0, 1, 0, 2, 1, 2, b, b, false);
/*  922 */       a(☃, bwf1, 0, 3, 0, 2, 3, 2, b, b, false);
/*  923 */       a(☃, bwf1, 0, 2, 0, 0, 2, 2, a, a, false);
/*  924 */       a(☃, bwf1, 1, 2, 0, 2, 2, 0, a, a, false);
/*  925 */       a(☃, e, 1, 2, 1, bwf1);
/*      */ 
/*      */       
/*  928 */       a(☃, bwf1, 5, 1, 0, 7, 1, 2, b, b, false);
/*  929 */       a(☃, bwf1, 5, 3, 0, 7, 3, 2, b, b, false);
/*  930 */       a(☃, bwf1, 7, 2, 0, 7, 2, 2, a, a, false);
/*  931 */       a(☃, bwf1, 5, 2, 0, 6, 2, 0, a, a, false);
/*  932 */       a(☃, e, 6, 2, 1, bwf1);
/*      */ 
/*      */       
/*  935 */       a(☃, bwf1, 0, 1, 5, 2, 1, 7, b, b, false);
/*  936 */       a(☃, bwf1, 0, 3, 5, 2, 3, 7, b, b, false);
/*  937 */       a(☃, bwf1, 0, 2, 5, 0, 2, 7, a, a, false);
/*  938 */       a(☃, bwf1, 1, 2, 7, 2, 2, 7, a, a, false);
/*  939 */       a(☃, e, 1, 2, 6, bwf1);
/*      */ 
/*      */       
/*  942 */       a(☃, bwf1, 5, 1, 5, 7, 1, 7, b, b, false);
/*  943 */       a(☃, bwf1, 5, 3, 5, 7, 3, 7, b, b, false);
/*  944 */       a(☃, bwf1, 7, 2, 5, 7, 2, 7, a, a, false);
/*  945 */       a(☃, bwf1, 5, 2, 7, 6, 2, 7, a, a, false);
/*  946 */       a(☃, e, 6, 2, 6, bwf1);
/*      */       
/*  948 */       if (bws.v.d(this.l)[eq.d.a()]) {
/*  949 */         a(☃, bwf1, 3, 3, 0, 4, 3, 0, b, b, false);
/*      */       } else {
/*  951 */         a(☃, bwf1, 3, 3, 0, 4, 3, 1, b, b, false);
/*  952 */         a(☃, bwf1, 3, 2, 0, 4, 2, 0, a, a, false);
/*  953 */         a(☃, bwf1, 3, 1, 0, 4, 1, 1, b, b, false);
/*      */       } 
/*  955 */       if (bws.v.d(this.l)[eq.c.a()]) {
/*  956 */         a(☃, bwf1, 3, 3, 7, 4, 3, 7, b, b, false);
/*      */       } else {
/*  958 */         a(☃, bwf1, 3, 3, 6, 4, 3, 7, b, b, false);
/*  959 */         a(☃, bwf1, 3, 2, 7, 4, 2, 7, a, a, false);
/*  960 */         a(☃, bwf1, 3, 1, 6, 4, 1, 7, b, b, false);
/*      */       } 
/*  962 */       if (bws.v.d(this.l)[eq.e.a()]) {
/*  963 */         a(☃, bwf1, 0, 3, 3, 0, 3, 4, b, b, false);
/*      */       } else {
/*  965 */         a(☃, bwf1, 0, 3, 3, 1, 3, 4, b, b, false);
/*  966 */         a(☃, bwf1, 0, 2, 3, 0, 2, 4, a, a, false);
/*  967 */         a(☃, bwf1, 0, 1, 3, 1, 1, 4, b, b, false);
/*      */       } 
/*  969 */       if (bws.v.d(this.l)[eq.f.a()]) {
/*  970 */         a(☃, bwf1, 7, 3, 3, 7, 3, 4, b, b, false);
/*      */       } else {
/*  972 */         a(☃, bwf1, 6, 3, 3, 7, 3, 4, b, b, false);
/*  973 */         a(☃, bwf1, 7, 2, 3, 7, 2, 4, a, a, false);
/*  974 */         a(☃, bwf1, 6, 1, 3, 7, 1, 4, b, b, false);
/*      */       } 
/*  976 */     } else if (this.p == 1) {
/*      */       
/*  978 */       a(☃, bwf1, 2, 1, 2, 2, 3, 2, b, b, false);
/*  979 */       a(☃, bwf1, 2, 1, 5, 2, 3, 5, b, b, false);
/*  980 */       a(☃, bwf1, 5, 1, 5, 5, 3, 5, b, b, false);
/*  981 */       a(☃, bwf1, 5, 1, 2, 5, 3, 2, b, b, false);
/*  982 */       a(☃, e, 2, 2, 2, bwf1);
/*  983 */       a(☃, e, 2, 2, 5, bwf1);
/*  984 */       a(☃, e, 5, 2, 5, bwf1);
/*  985 */       a(☃, e, 5, 2, 2, bwf1);
/*      */ 
/*      */       
/*  988 */       a(☃, bwf1, 0, 1, 0, 1, 3, 0, b, b, false);
/*  989 */       a(☃, bwf1, 0, 1, 1, 0, 3, 1, b, b, false);
/*  990 */       a(☃, bwf1, 0, 1, 7, 1, 3, 7, b, b, false);
/*  991 */       a(☃, bwf1, 0, 1, 6, 0, 3, 6, b, b, false);
/*  992 */       a(☃, bwf1, 6, 1, 7, 7, 3, 7, b, b, false);
/*  993 */       a(☃, bwf1, 7, 1, 6, 7, 3, 6, b, b, false);
/*  994 */       a(☃, bwf1, 6, 1, 0, 7, 3, 0, b, b, false);
/*  995 */       a(☃, bwf1, 7, 1, 1, 7, 3, 1, b, b, false);
/*  996 */       a(☃, a, 1, 2, 0, bwf1);
/*  997 */       a(☃, a, 0, 2, 1, bwf1);
/*  998 */       a(☃, a, 1, 2, 7, bwf1);
/*  999 */       a(☃, a, 0, 2, 6, bwf1);
/* 1000 */       a(☃, a, 6, 2, 7, bwf1);
/* 1001 */       a(☃, a, 7, 2, 6, bwf1);
/* 1002 */       a(☃, a, 6, 2, 0, bwf1);
/* 1003 */       a(☃, a, 7, 2, 1, bwf1);
/* 1004 */       if (!bws.v.d(this.l)[eq.d.a()]) {
/* 1005 */         a(☃, bwf1, 1, 3, 0, 6, 3, 0, b, b, false);
/* 1006 */         a(☃, bwf1, 1, 2, 0, 6, 2, 0, a, a, false);
/* 1007 */         a(☃, bwf1, 1, 1, 0, 6, 1, 0, b, b, false);
/*      */       } 
/* 1009 */       if (!bws.v.d(this.l)[eq.c.a()]) {
/* 1010 */         a(☃, bwf1, 1, 3, 7, 6, 3, 7, b, b, false);
/* 1011 */         a(☃, bwf1, 1, 2, 7, 6, 2, 7, a, a, false);
/* 1012 */         a(☃, bwf1, 1, 1, 7, 6, 1, 7, b, b, false);
/*      */       } 
/* 1014 */       if (!bws.v.d(this.l)[eq.e.a()]) {
/* 1015 */         a(☃, bwf1, 0, 3, 1, 0, 3, 6, b, b, false);
/* 1016 */         a(☃, bwf1, 0, 2, 1, 0, 2, 6, a, a, false);
/* 1017 */         a(☃, bwf1, 0, 1, 1, 0, 1, 6, b, b, false);
/*      */       } 
/* 1019 */       if (!bws.v.d(this.l)[eq.f.a()]) {
/* 1020 */         a(☃, bwf1, 7, 3, 1, 7, 3, 6, b, b, false);
/* 1021 */         a(☃, bwf1, 7, 2, 1, 7, 2, 6, a, a, false);
/* 1022 */         a(☃, bwf1, 7, 1, 1, 7, 1, 6, b, b, false);
/*      */       } 
/* 1024 */     } else if (this.p == 2) {
/* 1025 */       a(☃, bwf1, 0, 1, 0, 0, 1, 7, b, b, false);
/* 1026 */       a(☃, bwf1, 7, 1, 0, 7, 1, 7, b, b, false);
/* 1027 */       a(☃, bwf1, 1, 1, 0, 6, 1, 0, b, b, false);
/* 1028 */       a(☃, bwf1, 1, 1, 7, 6, 1, 7, b, b, false);
/*      */       
/* 1030 */       a(☃, bwf1, 0, 2, 0, 0, 2, 7, c, c, false);
/* 1031 */       a(☃, bwf1, 7, 2, 0, 7, 2, 7, c, c, false);
/* 1032 */       a(☃, bwf1, 1, 2, 0, 6, 2, 0, c, c, false);
/* 1033 */       a(☃, bwf1, 1, 2, 7, 6, 2, 7, c, c, false);
/*      */       
/* 1035 */       a(☃, bwf1, 0, 3, 0, 0, 3, 7, b, b, false);
/* 1036 */       a(☃, bwf1, 7, 3, 0, 7, 3, 7, b, b, false);
/* 1037 */       a(☃, bwf1, 1, 3, 0, 6, 3, 0, b, b, false);
/* 1038 */       a(☃, bwf1, 1, 3, 7, 6, 3, 7, b, b, false);
/*      */       
/* 1040 */       a(☃, bwf1, 0, 1, 3, 0, 2, 4, c, c, false);
/* 1041 */       a(☃, bwf1, 7, 1, 3, 7, 2, 4, c, c, false);
/* 1042 */       a(☃, bwf1, 3, 1, 0, 4, 2, 0, c, c, false);
/* 1043 */       a(☃, bwf1, 3, 1, 7, 4, 2, 7, c, c, false);
/*      */       
/* 1045 */       if (bws.v.d(this.l)[eq.d.a()]) {
/* 1046 */         a(☃, bwf1, 3, 1, 0, 4, 2, 0);
/*      */       }
/* 1048 */       if (bws.v.d(this.l)[eq.c.a()]) {
/* 1049 */         a(☃, bwf1, 3, 1, 7, 4, 2, 7);
/*      */       }
/* 1051 */       if (bws.v.d(this.l)[eq.e.a()]) {
/* 1052 */         a(☃, bwf1, 0, 1, 3, 0, 2, 4);
/*      */       }
/* 1054 */       if (bws.v.d(this.l)[eq.f.a()]) {
/* 1055 */         a(☃, bwf1, 7, 1, 3, 7, 2, 4);
/*      */       }
/*      */     } 
/* 1058 */     if (bool) {
/* 1059 */       a(☃, bwf1, 3, 1, 3, 4, 1, 4, b, b, false);
/* 1060 */       a(☃, bwf1, 3, 2, 3, 4, 2, 4, a, a, false);
/* 1061 */       a(☃, bwf1, 3, 3, 3, 4, 3, 4, b, b, false);
/*      */     } 
/*      */     
/* 1064 */     return true;
/*      */   }
/*      */ }


/* Location:              F:\dw\server.jar!\bws$s.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */