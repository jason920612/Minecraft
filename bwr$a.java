/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class a
/*     */   extends bwr.m
/*     */ {
/*     */   public a() {}
/*     */   
/*     */   public a(int ☃, Random random, bwf bwf1, eq eq1) {
/* 492 */     super(☃);
/*     */     
/* 494 */     a(eq1);
/* 495 */     this.n = bwf1;
/*     */   }
/*     */   
/*     */   protected a(Random ☃, int i, int j) {
/* 499 */     super(0);
/*     */     
/* 501 */     a(eq.c.a.a(☃));
/*     */     
/* 503 */     if (f().k() == eq.a.c) {
/* 504 */       this.n = new bwf(i, 64, j, i + 19 - 1, 73, j + 19 - 1);
/*     */     } else {
/* 506 */       this.n = new bwf(i, 64, j, i + 19 - 1, 73, j + 19 - 1);
/*     */     } 
/*     */   }
/*     */ 
/*     */   
/*     */   public void a(bxb ☃, List<bxb> list, Random random) {
/* 512 */     a((bwr.q)☃, list, random, 8, 3, false);
/* 513 */     b((bwr.q)☃, list, random, 3, 8, false);
/* 514 */     c((bwr.q)☃, list, random, 3, 8, false);
/*     */   }
/*     */   
/*     */   public static a a(List<bxb> ☃, Random random, int i, int j, int k, eq eq1, int n) {
/* 518 */     bwf bwf = bwf.a(i, j, k, -8, -3, 0, 19, 10, 19, eq1);
/*     */     
/* 520 */     if (!a(bwf) || bxb.a(☃, bwf) != null) {
/* 521 */       return null;
/*     */     }
/*     */     
/* 524 */     return new a(n, random, bwf, eq1);
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   public boolean a(axz ☃, Random random, bwf bwf1, axm axm1) {
/* 530 */     a(☃, bwf1, 7, 3, 0, 11, 4, 18, bct.dX.p(), bct.dX.p(), false);
/* 531 */     a(☃, bwf1, 0, 3, 7, 18, 4, 11, bct.dX.p(), bct.dX.p(), false);
/*     */     
/* 533 */     a(☃, bwf1, 8, 5, 0, 10, 7, 18, bct.a.p(), bct.a.p(), false);
/* 534 */     a(☃, bwf1, 0, 5, 8, 18, 7, 10, bct.a.p(), bct.a.p(), false);
/*     */     
/* 536 */     a(☃, bwf1, 7, 5, 0, 7, 5, 7, bct.dX.p(), bct.dX.p(), false);
/* 537 */     a(☃, bwf1, 7, 5, 11, 7, 5, 18, bct.dX.p(), bct.dX.p(), false);
/* 538 */     a(☃, bwf1, 11, 5, 0, 11, 5, 7, bct.dX.p(), bct.dX.p(), false);
/* 539 */     a(☃, bwf1, 11, 5, 11, 11, 5, 18, bct.dX.p(), bct.dX.p(), false);
/* 540 */     a(☃, bwf1, 0, 5, 7, 7, 5, 7, bct.dX.p(), bct.dX.p(), false);
/* 541 */     a(☃, bwf1, 11, 5, 7, 18, 5, 7, bct.dX.p(), bct.dX.p(), false);
/* 542 */     a(☃, bwf1, 0, 5, 11, 7, 5, 11, bct.dX.p(), bct.dX.p(), false);
/* 543 */     a(☃, bwf1, 11, 5, 11, 18, 5, 11, bct.dX.p(), bct.dX.p(), false);
/*     */ 
/*     */     
/* 546 */     a(☃, bwf1, 7, 2, 0, 11, 2, 5, bct.dX.p(), bct.dX.p(), false);
/* 547 */     a(☃, bwf1, 7, 2, 13, 11, 2, 18, bct.dX.p(), bct.dX.p(), false);
/* 548 */     a(☃, bwf1, 7, 0, 0, 11, 1, 3, bct.dX.p(), bct.dX.p(), false);
/* 549 */     a(☃, bwf1, 7, 0, 15, 11, 1, 18, bct.dX.p(), bct.dX.p(), false); int i;
/* 550 */     for (i = 7; i <= 11; i++) {
/* 551 */       for (int j = 0; j <= 2; j++) {
/* 552 */         b(☃, bct.dX.p(), i, -1, j, bwf1);
/* 553 */         b(☃, bct.dX.p(), i, -1, 18 - j, bwf1);
/*     */       } 
/*     */     } 
/*     */     
/* 557 */     a(☃, bwf1, 0, 2, 7, 5, 2, 11, bct.dX.p(), bct.dX.p(), false);
/* 558 */     a(☃, bwf1, 13, 2, 7, 18, 2, 11, bct.dX.p(), bct.dX.p(), false);
/* 559 */     a(☃, bwf1, 0, 0, 7, 3, 1, 11, bct.dX.p(), bct.dX.p(), false);
/* 560 */     a(☃, bwf1, 15, 0, 7, 18, 1, 11, bct.dX.p(), bct.dX.p(), false);
/* 561 */     for (i = 0; i <= 2; i++) {
/* 562 */       for (int j = 7; j <= 11; j++) {
/* 563 */         b(☃, bct.dX.p(), i, -1, j, bwf1);
/* 564 */         b(☃, bct.dX.p(), 18 - i, -1, j, bwf1);
/*     */       } 
/*     */     } 
/*     */     
/* 568 */     return true;
/*     */   }
/*     */ }


/* Location:              F:\dw\server.jar!\bwr$a.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */