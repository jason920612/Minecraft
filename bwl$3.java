/*     */ import java.util.List;
/*     */ import java.util.Random;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ final class null
/*     */   implements bwl.b
/*     */ {
/*     */   public boolean a;
/*     */   
/*     */   public void a() {
/* 252 */     this.a = false;
/*     */   }
/*     */ 
/*     */   
/*     */   public boolean a(bxm ☃, int i, bwl.a a1, el el1, List<bxb> list, Random random) {
/* 257 */     bhb bhb = a1.b.c();
/* 258 */     int j = random.nextInt(4) + 1;
/*     */     
/* 260 */     bwl.a a2 = bwl.a(list, bwl.a(☃, a1, new el(0, 0, -4), "bridge_piece", bhb, true));
/* 261 */     a2.o = -1;
/* 262 */     int k = 0;
/* 263 */     for (int m = 0; m < j; m++) {
/* 264 */       if (random.nextBoolean()) {
/* 265 */         a2 = bwl.a(list, bwl.a(☃, a2, new el(0, k, -4), "bridge_piece", bhb, true));
/* 266 */         k = 0;
/*     */       } else {
/* 268 */         if (random.nextBoolean()) {
/* 269 */           a2 = bwl.a(list, bwl.a(☃, a2, new el(0, k, -4), "bridge_steep_stairs", bhb, true));
/*     */         } else {
/* 271 */           a2 = bwl.a(list, bwl.a(☃, a2, new el(0, k, -8), "bridge_gentle_stairs", bhb, true));
/*     */         } 
/* 273 */         k = 4;
/*     */       } 
/*     */     } 
/*     */     
/* 277 */     if (this.a || random.nextInt(10 - i) != 0) {
/* 278 */       if (!bwl.a(☃, bwl.h(), i + 1, a2, new el(-3, k + 1, -11), list, random)) {
/* 279 */         return false;
/*     */       }
/*     */     } else {
/*     */       
/* 283 */       bwl.a(list, bwl.a(☃, a2, new el(-8 + random.nextInt(8), k, -70 + random.nextInt(10)), "ship", bhb, true));
/* 284 */       this.a = true;
/*     */     } 
/*     */ 
/*     */     
/* 288 */     a2 = bwl.a(list, bwl.a(☃, a2, new el(4, k, 0), "bridge_end", bhb.a(bhb.c), true));
/* 289 */     a2.o = -1;
/*     */     
/* 291 */     return true;
/*     */   }
/*     */ }


/* Location:              F:\dw\server.jar!\bwl$3.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */